from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes, CommandHandler
from db_utils import add_or_update_user, add_beer_entry, get_db, get_user_total_volume
from models import User # Import User if needed, or rely on db_utils
import logging

# Enable logging
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Sends explanation on how to use the bot and registers/updates the user."""
    user = update.effective_user
    if not user:
        # Handle cases where user is None, though unlikely for a command
        return

    # Add or update user in the database
    with next(get_db()) as db:
        db_user = add_or_update_user(db, user_id=user.id, first_name=user.first_name, username=user.username)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–ø–∏—Å–∏ –æ –ø–∏–≤–µ
        total_volume = get_user_total_volume(db, user.id)
        
        # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π (–Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å), 
        # –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –∑–∞–ø–∏—Å—å —Å –æ–±—ä–µ–º–æ–º 0.0 –ª–∏—Ç—Ä–æ–≤
        if total_volume == 0.0:
            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è photo_id, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç —Ä–µ–∞–ª—å–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                add_beer_entry(db, user_id=db_user.id, volume=0.0, photo_id="initial_zero_volume")
                logger.info(f"Added initial zero volume entry for user {user.id}")
            except Exception as e:
                logger.error(f"Error adding initial zero volume entry: {e}", exc_info=True)

    # Define buttons
    keyboard = [
        [KeyboardButton("–í—ã–ø–∏–ª –ø–∏–≤–æ"), KeyboardButton("–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_html(
        rf"<b>–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}!</b> üëã"
        f"\n\n–¢–µ–ø–µ—Ä—å —Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫ –≤ <b>–ü–∏–≤–Ω–æ–º –ß–µ–ª–ª–µ–Ω–¥–∂–µ üçª –õ–µ—Ç–Ω–∏–π –ö—É–±–æ–∫ 2025</b> üèÜ",
        reply_markup=reply_markup, # Add the keyboard here
    )

async def info(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Sends information about how to participate in the beer challenge."""
    await update.message.reply_html(
        f"<b>–ö–∞–∫ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ü–∏–≤–Ω–æ–º –ß–µ–ª–ª–µ–Ω–¥–∂–µ:</b>\n\n"
        f"1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ —Å –ø–∏–≤–æ–º üì∏ (–±–µ–∑ –ø–∏–≤–∞ - –±—É–¥–µ—Ç –∞–Ω—É–ª–∏—Ä–æ–≤–∞–Ω–æ)\n"
        f"2Ô∏è‚É£ –£–∫–∞–∂–∏ –æ–±—ä–µ–º –≤ –ª–∏—Ç—Ä–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 0.5) üíß\n\n"
        f"üëÄ –ñ–º–∏ /leaderboard —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫—Ç–æ –≤–ø–µ—Ä–µ–¥–∏! ü•áü•à\n"
        f"–£–¥–∞—á–∏ –∏ –ø—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–∏–≤–æ–ø–∏—Ç–∏—è! üòâ"
    )

async def rules(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Sends the rules of the beer challenge."""
    await update.message.reply_html(
        f"<b>üìú –ü–†–ê–í–ò–õ–ê –ü–ò–í–ù–û–ì–û –ß–ï–õ–õ–ï–ù–î–ñ–ê üìú</b>\n\n"
        f"üóì –ö–æ–Ω–∫—É—Ä—Å –¥–ª–∏—Ç—Å—è –¥–æ <b>31 –∞–≤–≥—É—Å—Ç–∞ 2025 –≥–æ–¥–∞</b> –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ\n\n"
        f"üç∫ –ü—Ä–∏—Å—ã–ª–∞—Ç—å –Ω—É–∂–Ω–æ <b>—Ñ–æ—Ç–æ —Å –ø–∏–≤–æ–º –≤ —Ä—É–∫–µ</b> (—Å–∏–¥—Ä —Å—á–∏—Ç–∞–µ—Ç—Å—è). –ë–µ–∑ –ø–∏–≤–∞ –±—É–¥–µ—Ç –∞–Ω—É–ª–∏—Ä–æ–≤–∞—Ç—å—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º\n\n"
        f"ü•É –î—Ä—É–≥–æ–π –∞–ª–∫–æ–≥–æ–ª—å –≤ –¥–∞–Ω–Ω–æ–º —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–∏ <b>–Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç</b> (–ø—Ä–æ—Å—Ç–∏ –ì–æ—Ä)\n\n"
        f"üèÖ –ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ä—É–±–µ–∂–µ–π –≤—ã–ø–∏—Ç–æ–≥–æ –æ–±—ä–µ–º–∞ –ø–∏–≤–∞, –≤–∞—Å –±—É–¥—É—Ç <b>–Ω–∞–≥—Ä–∞–∂–¥–∞—Ç—å –∑–≤–∞–Ω–∏—è–º–∏</b>!\n\n"
        f"‚öñÔ∏è <b>–ë–æ–ª—å—à–∞—è –ø—Ä–æ—Å—å–±–∞ –Ω–µ –º—É—Ö–ª–∏–≤–∞—Ç—å –∏ –Ω–µ –æ–±–º–∞–Ω—ã–≤–∞—Ç—å</b>\n\n"
        f"üí™ <i>–ü–æ–±–µ–¥–∏—Ç —Å–∏–ª—å–Ω–µ–π—à–∏–π! –î–∞ –ø—Ä–∏–±—É–¥–µ—Ç —Å –≤–∞–º–∏ —Å–∏–ª–∞!</i> üèÜ"
    )